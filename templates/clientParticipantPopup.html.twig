{% extends "clientBase.html.twig" %}
{% import "webrtc.html.twig" as webrtc %}
{% import "chat.html.twig" as chat %}

{% block content %}
<div id="client-app" class="client-app">

   <div id="widget-disconnected" style="display: none;" class="client-block">
     <h2 class="client-title">{{ session.title }}</h2>
     <div id="widget-disconnected-message" class="client-message"></div>
     <div id="widget-rating" class="client-rating">
       <a href="#" class="setMeetingRating" data-rating="1"><span class="glyphicon glyphicon-star-empty"></span></a>
       <a href="#" class="setMeetingRating" data-rating="2"><span class="glyphicon glyphicon-star-empty"></span></a>
       <a href="#" class="setMeetingRating" data-rating="3"><span class="glyphicon glyphicon-star-empty"></span></a>
       <a href="#" class="setMeetingRating" data-rating="4"><span class="glyphicon glyphicon-star-empty"></span></a>
       <a href="#" class="setMeetingRating" data-rating="5"><span class="glyphicon glyphicon-star-empty"></span></a>
     </div>
     <a href="{{ config.base_path }}/embbed/{{ session.token }}" class="btn btn-primary">{% trans "Request new call" %}</a>
   </div>

   <div id="widget-queue-closed" style="display: none;">
     <h2 class="client-title">{{ session.title }}</h2>
     <div id="widget-queue-closed-message" class="client-message"></div>
   </div>

   <div id="widget-closed" style="display: none;">
     <h2 class="client-title">{{ session.title }}</h2>
     <div id="widget-closed-message" class="client-message"></div>
   </div>
   
   <div id="widget-lurking" style="display: none;">
     <h2 class="client-title">{{ session.title }}</h2>
     <div id="widget-lurking-message" class="client-message">{% trans "Please wait" %}</div>
     <a href="#" class="btn btn-primary" id="requestToEnterQueue">{% trans "Request to enter" %}</a>     
   </div>

   <div id="widget-kicked" style="display: none;">
     <h2 class="client-title">{{ session.title }}</h2>
     <div id="widget-kicked-message" class="client-message"></div>
   </div>
   
   
   <div id="widget-waiting-on-queue" style="display: none;">
     <h2 class="client-title">{{ session.title }}</h2>
     <div id="widget-waiting-on-queue-message" class="client-message"></div>
     <div id="widget-waiting-queue-size"></div>
     <div style="text-align: center; margin-bottom: 30px; margin-top: 20px;"><center>
         <div style="width: 200px; height: 200px;">
           {{ webrtc.localVideo() }}
           {{ webrtc.localAudioBar() }}
           {{ webrtc.testAudio() }}
         </div>
     </center></div>
     <div class="row">
       {% if ss.authenticated %}
         {% trans "Student Name:" %} {{ ss.friendlyName }}
       {% else %}
         {% trans "Student Name:" %} <input type="text" id="studentFriendlyName">
       {% endif %}
     </div>
     <div class="row">
       <a href="#" class="btn btn-primary" id="requestToLeaveQueue">{% trans "Cancel request" %}</a>
     </div>
   </div>
   
   <div id="widget-deserted" style="display: none;">
     <h2 class="client-title">{{ session.title }}</h2>
     <div id="widget-deserted-message" class="client-message"></div>
   </div>

   <div id="widget-in-session" style="display: none;">
     <h2 class="client-title">{{ session.title }}</h2>
     <div id="widget-in-session-message" class="client-message"></div>
     <center>
       <div class="videoContainer">
         {{ webrtc.remoteVideo() }}
         {{ chat.chatPanel(session) }}
       </div>
     </center>
     <a href="#" class="btn btn-primary" id="requestHangup">{% trans "Hangup" %}</a>
   </div>

   <div id="debug"></div>
  
</div>

{% endblock %}
{% block scripts %}
<script>

  $("#getQRCode").click(function (data) {
  });
  
  $("#shareFacebook").click(function (data) {
  });
  
  var currentState = "";
  var waitingForKeyboard = true;
  
  socket = openSocket("https://{{ config.backend_host }}:{{ config.backend_port }}/");

  $("#studentFriendlyName").keyup(function(event) {
  
    if (waitingForKeyboard) {  
      waitingForKeyboard = false;
      setTimeout(function() {
        putData("{{ config.base_path }}/api/setParticipantFrienldyName/{{ participant.token }}", { friendlyName: event.target.value });
        waitingForKeyboard = true;
      }, 1000);
    }
  });

  $(".setMeetingRating").click(function(event) {
    value = $(this).data('rating');
    $('.setMeetingRating').each(function() {
        trating = $(this).data('rating');        
        if (trating <= value) {
          $(this).html('<span class="glyphicon glyphicon-star"></span>')
        } else {
          $(this).html('<span class="glyphicon glyphicon-star-empty"></span>')
        }
      }
    );
    putData("{{ config.base_path }}/api/participant/rateMeeting/{{ participant.token }}", { rating : value });    
  });
  
  $("#requestHangup").click(function(data) {
    window.existingCall.close(); // PeerJS Hangup Call
    putData("{{ config.base_path }}/api/participant/requestHangup/{{ participant.token }}", null);
    getData("{{ config.base_path }}/api/getParticipantInfo/{{ participant.token }}", function(data) {
      updateWebTUTClient(data);
    });
  });

  $("#requestToEnterQueue").click(function(data) {   
    putData("{{ config.base_path }}/api/participant/requestToEnterQueue/{{ participant.token }}", null);    
  });

  $("#requestToLeaveQueue").click(function(data) {
    window.audioContext.close();
    putData("{{ config.base_path }}/api/participant/requestToLeaveQueue/{{ participant.token }}/click", null);
    getData("{{ config.base_path }}/api/getParticipantInfo/{{ participant.token }}", function(data) {
      updateWebTUTClient(data);
    });
    window.close();
  });
  
  handle = $("#client-app").autoRefreshData("{{ config.base_path }}/api/getParticipantInfo/{{ participant.token }}", 5000, function(data) {
    updateWebTUTClient(data);
  });

  /// PEERJS
  
  var peer = new Peer({
    host: '{{ config.backend_host }}',
    port: {{ config.backend_port }}, 
    path: '{{ config.backend_peerjs_path }}',
        
    config: {'iceServers': {{ iceTurnApi.getPeerJSConfig | raw }} },
    debug: 3

  });

  peer.on('open', function(id) {
    console.log(' ************ My peer ID is: ' + id);
    putData("{{ config.base_path }}/api/participant/{{ participant.token }}/register/" + id);
    sendData(socket, "registerPeer", { "id" : peer.id, "name":"{{ ss.friendlyName }}", "participantType": "participant", "sessionToken": "{{ session.token }}" } );  
  });

  // Receiving a call
  peer.on('call', function(call) {
    console.log(' ************ Got a CALL!!');
    call.answer(window.localStream);
    sendData(socket,"joinRoom",call.peer);
    webrtc_step3(call);
  });
    
  function updateWebTUTClient(data) 
  {
  
    // $("#debug").html("<pre>" + "<h2>Participant state: " + data.state + "</h2>" +           
    //                 JSON.stringify(data) + " </pre>");

    $("#widget-" + data.state + "-message").html(data.message);

    console.log(data.state + " <> " + currentState);
    
    if ((data.state == "waiting") || (data.state == "waiting-on-queue")) {
        $("#widget-waiting-queue-size").getContent("{{ config.base_path }}/api/getParticipantQueueInfo/{{ participant.token }}/html");
    }    
      
    if (currentState != data.state) {
    
      $("#widget-" + currentState).hide();
      $("#widget-" + data.state).show();
  
      currentState = data.state;
    } else {        
    }

  }

  $(function(){
    
    $( window ).load(function() {
      webrtc_step1();
      putData("{{ config.base_path }}/api/participant/requestToEnterQueue/{{ participant.token }}", null);
      getData("{{ config.base_path }}/api/getParticipantInfo/{{ participant.token }}", function(data) {
        updateWebTUTClient(data);
      });
    });
    
    $( window ).on('beforeunload', function() {
      
      console.log("unload called! : " + '{{ config.base_path }}/api/participant/requestToLeaveQueue/{{ participant.token }}/unload');
      
      var can_exit = false;
      
      $.ajax({
        url: '{{ config.base_path }}/api/participant/requestToLeaveQueue/{{ participant.token }}/unload',
        type: 'PUT',
        async: false
      }).done(function() { can_exit = true; });    
            
      console.log("participant updated on unload! " + can_exit);
      
      return;
    });

  });

</script>
{{ webrtc.javascriptScript(config) }}
{{ chat.javascriptScript(session,ss) }}
{% endblock %}

